quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=student
quarkus.datasource.password=spidermanismyhero
quarkus.datasource.jdbc.url=jdbc:postgresql://database-2.cuvv0osxzgmi.eu-west-3.rds.amazonaws.com:5432/java_2023_09_Nicolas?currentSchema=eurderdb
quarkus.datasource.jdbc.max-size=5

quarkus.hibernate-orm.database.generation=drop-and-create
quarkus.hibernate-orm.log.sql=true

# Specify the SQL load script
quarkus.hibernate-orm.sql-load-script=import.sql

# Enable Swagger UI
quarkus.swagger-ui.enable=true

# HTTP Basic Authentication
quarkus.http.auth.basic=true

quarkus.log.category."org.hibernate.SQL".level=DEBUG
quarkus.log.category."org.hibernate.orm".level=DEBUG

# Configuration for Elytron JDBC Security
#quarkus.security.jdbc.enabled=true
#quarkus.security.jdbc.principal-query.sql=SELECT u.password, u.role FROM users u WHERE u.username=?
#quarkus.security.jdbc.principal-query.clear-password-mapper.enabled=true
#quarkus.security.jdbc.principal-query.clear-password-mapper.password-index=1
#quarkus.security.jdbc.principal-query.attribute-mappings.0.index=2
#quarkus.security.jdbc.principal-query.attribute-mappings.0.to=groups

# Configure your datasource to use H2 in-memory database for tests
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:test;MODE=PostgreSQL;DB_CLOSE_DELAY=-1;INIT=CREATE SCHEMA IF NOT EXISTS eurderdb
%test.quarkus.datasource.jdbc.driver=org.h2.Driver
